<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2016/7/25 0025
 * Time: 下午 2:51
 */

namespace backend\modules\crm\models\project\model;

use backend\modules\crm\models\CRMBaseRecord;
use backend\modules\fin\models\contract\ContractBaseRecord;
use Yii;

class ProjectForm extends ProBaseForm
{
    public $uuid;
    public $name;
    public $code;
    public $status;
    public $last_touch_time;
    public $next_touch_time;
    public $start_time;
    public $end_time;
    public $create_time;
    public $money_amount; // 项目金额
    public $actual_money_amount; //项目实际金额
    public $receive_money_status; // 回款状态
    public $return_money_amount; //返点金额
    public $stamp_status; // 开票状态
    public $contract_status; // 合同状态
    public $description;
    public $customer_name;
    public $customer_uuid;
    public $business_id;
    public $sign_time; //合同签订时间
    public $project_duty_name;//项目负责人
    public $project_duty_uuid;
    public $project_member_name; // 项目成员
    public $project_member_uuid;
    public $project_contact_name;//项目联系人
    public $project_contact_uuid;
    public $project_manager_uuid;//项目经理
    public $project_manager_name;
    public $config;
    public $customer_type; // 客户类型
    public $_active_attachment; // 立项资料
    public $_done_attachment; // 结案资料
    public $_budget_attachment; // 项目预算资料
    const codePrefix = 'P';

    public function rules()
    {
        return [
            [['name'],'required'],
            Yii::createObject([
                'class'=>'backend\models\validator\FileNameValidator',
                'attributes'=>[
                    '_active_attachment',
                    '_done_attachment',
                    '_budget_attachment'
                ],
                'pattern'=>'/^\S+$/',
                'message'=>'文件名不能包含空格'
            ]),
        ];
    }

    function init()
    {
        $this->config = new ProjectConfig();
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function getList($key) {
        return $this->config->getList($key);
    }

    public function getAppointed($key, $index) {
        return $this->config->getAppointed($key, $index);
    }

    public function generateContractCode($project_uuid, $project_code) {
        $contract = ContractBaseRecord::find()
            ->alias('t1')
            ->select(['max(t1.code) code'])
            ->leftJoin(CRMBaseRecord::CRMProjectContractMap . ' t2', 't1.uuid=t2.contract_uuid')
            ->andWhere(['t2.project_uuid'=>$project_uuid])
            ->asArray()->one();
        $code = isset($contract['code'])?$contract['code']+1:$project_code.'01';
        return $code;
    }
}