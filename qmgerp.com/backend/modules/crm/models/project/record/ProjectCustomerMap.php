<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2016/9/1 0001
 * Time: 上午 11:44
 */

namespace backend\modules\crm\models\project\record;


use backend\models\interfaces\Map;
use backend\models\interfaces\RecordOperator;

class ProjectCustomerMap extends ProjectBaseRecord implements Map,RecordOperator
{
    public static function tableName()
    {
        return self::CRMCustomerProjectMap;
    }

    public function insertRecord($formData)
    {
        // TODO: Implement insertRecord() method.
    }

    public function loadStampListByProjectUuid($uuid) {
        if(empty($uuid)) {
            return null;
        }

        $list = self::find()->alias('t1')->select([
            't3.uuid',
            't3.stamp_number',
        ])->leftJoin(self::CRMCustomerStampMap . ' t2', 't2.customer_uuid = t1.customer_uuid')
            ->leftJoin(self::CRMStamp . ' t3', 't3.uuid = t2.stamp_uuid')
            ->andWhere(['t1.project_uuid'=>$uuid])->asArray()->all();
        if(empty($list)) {
            return null;
        }

        return $this->transformForDropDownList($list, 'uuid', 'stamp_number');
    }

    public function formDataPreHandler(&$formData, $record)
    {
        parent::formDataPreHandler($formData, $record); // TODO: Change the autogenerated stub
    }

    public function insertSingleRecord($formData)
    {
        if(empty($formData) || !isset($formData['project_uuid']) || empty($formData['project_uuid'])) {
            return true;
        }
        if(!$this->updatePreHandler($formData)) {
            return true;
        }

        return $this->insert();
    }

    public function updateRecord($formData)
    {
        // TODO: Implement updateRecord() method.
    }

    public function updateSingleRecord($formData)
    {
        // TODO: Implement updateSingleRecord() method.
    }
}