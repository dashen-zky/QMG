<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2016/7/3 0003
 * Time: 下午 5:54
 */

namespace backend\modules\hr\controllers;

use backend\controllers\BaseAppController;
use backend\models\BackEndBaseController;
use Yii;
use backend\modules\hr\models\DepartmentForm;
use yii\helpers\Json;
use backend\modules\hr\models\Department;
use backend\models\CompressHtml;
use backend\modules\hr\models\EmployeeBasicInformation;

class DepartmentController extends BackEndBaseController
{
    public $department;
    public function init()
    {
        $this->department = new Department();
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function actionIndex() {
        return $this->render('index', [
            'tab'=>$this->getTab(Yii::$app->request->get('tab'), 'department-1'),
        ]);
    }

    public function actionAdd() {
        $formData = Yii::$app->request->post('DepartmentForm');
        if ($this->department->insertRecord($formData)) {
            $tab = 'department-'.$formData['level'];
            $this->redirect([
                'index',
                'tab'=>$tab,
            ]);
        } else {
            $this->render('/site/error',[
                'errorMessage' => "增加部门失败，输入数据非法，点击返回按钮返回",
                'backUrl' => '/hr/department/index',
            ]);
        }
    }

    public function actionEdit() {
        $uuid = Yii::$app->request->get('uuid');
        if(!empty($uuid)) {
            $department = $this->department->getRecordByUuid($uuid);
            return $this->render('edit',[
                'formData'=>$department,
                'model'=>new DepartmentForm(),
            ]);
        }
    }

    public function actionUpdate() {
        $formData = Yii::$app->request->post('DepartmentForm');
        $result = $this->department->updateRecord($formData);
        if ($result || $result === 0) {
            $this->redirect(['index']);
        } else {
            $errorMessage = "输入的数据格式不正确或是对部门信息没有进行改变,点击下面的链接返回去";
            $backUrl = "/hr/department/index";
            return $this->render('/site/error',[
                'errorMessage'=>$errorMessage,
                'backUrl'=> $backUrl,
            ]);
        }
    }

    public function actionParentList() {
        $level = Yii::$app->request->get('level');
        $departmentList = $this->department->parentDepartmentList($level);
        $departmentListHtml = CompressHtml::compressHtml($this->renderPartial('/department/department-select-list',['department'=>$departmentList]));
        return $departmentListHtml;
    }
    
    public function actionDelete() {
        // 部门删除功能待定
        // 部门删除能够待定 因为部门删除会导致很多问题出现 部门下面所有
        return $this->redirect(["index"]);
    }

    public function actionEmployeeList() {
        $employeeList = (new EmployeeBasicInformation())->allEmployeeList(false);
        $uuids = Yii::$app->request->get('uuids');
        $uuids = explode(',', trim($uuids, ','));
        return CompressHtml::compressHtml($this->renderPartial('@hr/views/employee/employee-select-list-advance.php',[
            'employeeList'=>$employeeList,
            'uuids'=>$uuids,
        ]));
    }

    public function actionUpdateParentDepartments() {
        return ;
        $department = new Department();
        $department->updateParentDepartments();
//        $this->redirect(['index']);
    }

    public function actionUpdateChildDepartments() {
        return ;
        $department = new Department();
        $department->updateChildDepartments();
    }

    public function actionUpdateChildPositions() {
        return ;
        $department = new Department();
        $department->updateChildPositions();
    }
}